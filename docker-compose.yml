version: "3.9"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports: ["2181:2181"]
    restart: always

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on: [zookeeper]
    ports: ["9092:9092"]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
    restart: always

  # üîç Kafka UI (Provectus)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports: ["8085:8080"]
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on: [kafka]
    restart: always


  hotel-db:
    image: postgres:14
    environment:
      POSTGRES_DB: hotel_db
      POSTGRES_USER: hotel
      POSTGRES_PASSWORD: hotel
    ports: ["5434:5432"]
    restart: always

  reservation-db:
    image: postgres:14
    environment:
      POSTGRES_DB: reservation_db
      POSTGRES_USER: reservation
      POSTGRES_PASSWORD: reservation
    ports: ["5435:5432"]
    restart: always

  auth-db:
    image: postgres:14
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports: [ "5436:5432" ]
    restart: always


  hotel-service:
    build:
      context: .
      dockerfile: hotel-service/Dockerfile
    depends_on: [hotel-db]
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://hotel-db:5432/hotel_db
      SPRING_DATASOURCE_USERNAME: hotel
      SPRING_DATASOURCE_PASSWORD: hotel
      SERVER_PORT: 8081
    ports: ["8081:8081"]
    restart: always

  reservation-service:
    build:
      context: .
      dockerfile: reservation-service/Dockerfile
    depends_on: [reservation-db, kafka]
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://reservation-db:5432/reservation_db
      SPRING_DATASOURCE_USERNAME: reservation
      SPRING_DATASOURCE_PASSWORD: reservation
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SERVER_PORT: 8082
    ports: ["8082:8082"]
    restart: always

  notification-service:
    build:
      context: .
      dockerfile: notification-service/Dockerfile
    depends_on: [kafka]
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SERVER_PORT: 8083
    ports: ["8083:8083"]
    restart: always

  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    depends_on: [ auth-db ]
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-db:5432/auth_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      SERVER_PORT: 8084
    ports: [ "8084:8084" ]
    restart: always

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    depends_on: [hotel-service, reservation-service]
    environment:
      SERVER_PORT: 8080
    ports: ["8080:8080"]
    restart: always
